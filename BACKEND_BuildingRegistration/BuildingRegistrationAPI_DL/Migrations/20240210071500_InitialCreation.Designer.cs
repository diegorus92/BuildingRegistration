// <auto-generated />
using System;
using BuildingRegistrationAPI_DL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BuildingRegistrationAPI_DL.Migrations
{
    [DbContext(typeof(BuildingRegistrationContext))]
    [Migration("20240210071500_InitialCreation")]
    partial class InitialCreation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BuildingRegistrationAPI_DL.Models.Building", b =>
                {
                    b.Property<int>("BuildingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BuildingId"));

                    b.Property<string>("BuildingAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("BuildingAllowPet")
                        .HasColumnType("bit");

                    b.Property<short>("BuildingElevatorQty")
                        .HasColumnType("smallint");

                    b.Property<bool?>("BuildingHasCleaningService")
                        .HasColumnType("bit");

                    b.Property<bool?>("BuildingHasGuard")
                        .HasColumnType("bit");

                    b.Property<bool?>("BuildingHasJanitor")
                        .HasColumnType("bit");

                    b.Property<bool?>("BuildingHasWifi")
                        .HasColumnType("bit");

                    b.Property<string>("BuildingName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildingNote")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BuildingId");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("BuildingRegistrationAPI_DL.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FloorId")
                        .HasColumnType("int");

                    b.HasKey("DepartmentId");

                    b.HasIndex("FloorId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("BuildingRegistrationAPI_DL.Models.Employee", b =>
                {
                    b.Property<long>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("EmployeeId"));

                    b.Property<string>("EmployeeCheckIn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeCheckOut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("BuildingRegistrationAPI_DL.Models.Floor", b =>
                {
                    b.Property<int>("FloorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FloorId"));

                    b.Property<int>("BuildingId")
                        .HasColumnType("int");

                    b.Property<string>("FloorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FloorId");

                    b.HasIndex("BuildingId");

                    b.ToTable("Floors");
                });

            modelBuilder.Entity("BuildingRegistrationAPI_DL.Models.Garage", b =>
                {
                    b.Property<int>("GarageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GarageId"));

                    b.Property<string>("GarageLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GarageId");

                    b.ToTable("Garages");
                });

            modelBuilder.Entity("BuildingRegistrationAPI_DL.Models.GarageSection", b =>
                {
                    b.Property<int>("GarageSectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GarageSectionId"));

                    b.Property<int>("GarageId")
                        .HasColumnType("int");

                    b.Property<string>("GarageSectionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GarageSectionId");

                    b.HasIndex("GarageId");

                    b.ToTable("GaragesSections");
                });

            modelBuilder.Entity("BuildingRegistrationAPI_DL.Models.Occupant", b =>
                {
                    b.Property<long>("OccupantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("OccupantId"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("OccupantCellPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OccupantEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OccupantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OccupantSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OccupantId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Occupants");
                });

            modelBuilder.Entity("BuildingRegistrationAPI_DL.Models.Vehicle", b =>
                {
                    b.Property<long>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("VehicleId"));

                    b.Property<string>("VehicleBrand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleLicensePlate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleModel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehicleId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("EmployeeOccupant", b =>
                {
                    b.Property<long>("EmployeesEmployeeId")
                        .HasColumnType("bigint");

                    b.Property<long>("OccupantsOccupantId")
                        .HasColumnType("bigint");

                    b.HasKey("EmployeesEmployeeId", "OccupantsOccupantId");

                    b.HasIndex("OccupantsOccupantId");

                    b.ToTable("EmployeeOccupant");
                });

            modelBuilder.Entity("GarageSectionOccupant", b =>
                {
                    b.Property<int>("GarageSectionsGarageSectionId")
                        .HasColumnType("int");

                    b.Property<long>("OccupantsOccupantId")
                        .HasColumnType("bigint");

                    b.HasKey("GarageSectionsGarageSectionId", "OccupantsOccupantId");

                    b.HasIndex("OccupantsOccupantId");

                    b.ToTable("GarageSectionOccupant");
                });

            modelBuilder.Entity("OccupantVehicle", b =>
                {
                    b.Property<long>("OccupantsOccupantId")
                        .HasColumnType("bigint");

                    b.Property<long>("VehiclesVehicleId")
                        .HasColumnType("bigint");

                    b.HasKey("OccupantsOccupantId", "VehiclesVehicleId");

                    b.HasIndex("VehiclesVehicleId");

                    b.ToTable("OccupantVehicle");
                });

            modelBuilder.Entity("BuildingRegistrationAPI_DL.Models.Department", b =>
                {
                    b.HasOne("BuildingRegistrationAPI_DL.Models.Floor", "Floor")
                        .WithMany()
                        .HasForeignKey("FloorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Floor");
                });

            modelBuilder.Entity("BuildingRegistrationAPI_DL.Models.Floor", b =>
                {
                    b.HasOne("BuildingRegistrationAPI_DL.Models.Building", "Building")
                        .WithMany()
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");
                });

            modelBuilder.Entity("BuildingRegistrationAPI_DL.Models.GarageSection", b =>
                {
                    b.HasOne("BuildingRegistrationAPI_DL.Models.Garage", "Garage")
                        .WithMany()
                        .HasForeignKey("GarageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Garage");
                });

            modelBuilder.Entity("BuildingRegistrationAPI_DL.Models.Occupant", b =>
                {
                    b.HasOne("BuildingRegistrationAPI_DL.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("EmployeeOccupant", b =>
                {
                    b.HasOne("BuildingRegistrationAPI_DL.Models.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeesEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuildingRegistrationAPI_DL.Models.Occupant", null)
                        .WithMany()
                        .HasForeignKey("OccupantsOccupantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GarageSectionOccupant", b =>
                {
                    b.HasOne("BuildingRegistrationAPI_DL.Models.GarageSection", null)
                        .WithMany()
                        .HasForeignKey("GarageSectionsGarageSectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuildingRegistrationAPI_DL.Models.Occupant", null)
                        .WithMany()
                        .HasForeignKey("OccupantsOccupantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OccupantVehicle", b =>
                {
                    b.HasOne("BuildingRegistrationAPI_DL.Models.Occupant", null)
                        .WithMany()
                        .HasForeignKey("OccupantsOccupantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuildingRegistrationAPI_DL.Models.Vehicle", null)
                        .WithMany()
                        .HasForeignKey("VehiclesVehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
